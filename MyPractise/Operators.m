clear; close all; clc;% logical operator1 == 2 % false1 ~= 2 % true1 && 0 % AND1 || 0 % ORxor(1,0) % XOR% PS1('>> ')； change promptdisp(sprintf('2 decimals: %0.2f',pi))disp(sprintf('2 decimals: %0.6f',pi))format longpiformat shortpi%==== Matrix =====v=1:6v=1:0.1:2ones(2,3)2*ones(2,3)zeros(1,3)rand(1,3) % rand between 0~1randn(1:3) % Guassian randw = -6 + sqrt(10)*(randn(1,10000))hist(w)eye(4)%===== move data aournd ====A=[1 2;3 4;5 6]size(A)size(A,1) % number of rowssize(A,2) % number of columnsv = [1;2;3;4]length(v)length(A) % ans is bigger one between rows and columnswho % shows all variables in current workspacewhos % with detailsclear A % clear certain variableb = v(1:3)% save xxx.txt v% save xxx.txt v -asciiA=[1 2;3 4;5 6]A(3,2)A(2,:)  % ":" means every element along that row/columnA(:,2)A([1 3],:)A(:,2) = [10;11;12]A = [A,[100;101;102]]A(:) % put all elements of A into a single vectorA = [1 2;3 4;5 6]B = [11 12;13 14;15 16]C = [A B] % same as [A, B]C = [A; B]theta1=ones(10,11)theta2=2*ones(10,11)theta3=3*ones(1,11)thetaVec=[theta1(:); theta2(:); theta3(:)];size(thetaVec)reshape(thetaVec(1:110),10,11)reshape(thetaVec(111:220),10,11)reshape(thetaVec(221:231),1,11)%====== computational on data======A = [1 2;3 4;5 6]B = [11 12;13 14;15 16]C = [1 1;2 2]A*CA.*B A .^2v = [1; 2; 3]1 ./ v 1 ./ Alog(v)exp(v)abs(v)-v % -1 * vv + ones(length(v),1)v + 1A' % A transposea = [1 15 2 0.5]max(a)[val,ind]=max(a) % what and where the max elementa < 3find(a<3)A=magic(3)[r,c] = find(A >=7) % index of element which great then or equal to 7, by rows and columnssum(a) % add all elements up prod(a) % returns the product of elements fo Afloor(a) % 向下取整ceil(a) % 四舍五入max(rand(3),rand(3))  max(A,[],1)max(A,[],2)max(max(A))max(A(:))A=magic(9)sum(A,1)sum(A,2)A .* eye(9)sum(sum(A.*eye(9)))sum(sum(A.*flipud(eye(9))))flipud(eye(9))A= magic(3)pinv(A) % inverse Apinv(A) * A%==== About Plot =======t=[0:0.01:0.98]y1=sin(2*pi*4*t);plot(t,y1);y2=cos(2*pi*4*t);plot(t,y2);plot(t,y1);hold on;plot(t,y2,'r');xlabel('time');ylabel('value');legend('sin','cos');title('my plot');print -dpng 'myplot.png'closefigure(1);plot(t,y1);figure(2);plot(t,y2);subplot(1,2,1) % divides figure 1 into 1x2 grid, now is 1st one.plot(t,y1);subplot(1,2,2)plot(t,y2);axis([0.5 1 -1 1])clf % clear figureA=magic(5)imagesc(A)  % visiblized matriximagesc(magic(15)), colorbar, colormap gray;a=1;b=2;c=3 % won't output anythinga=1,b=2,c=3 % same as above, but output one by one 